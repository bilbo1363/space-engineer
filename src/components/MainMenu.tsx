import { useMissionStore } from '../store/useMissionStore';
import { useGameStore } from '../store/useGameStore';
import { useAppStore } from '../store/useAppStore';
import { STAGE_1_MISSIONS } from '../core/missions/stage1Missions';
import { STAGE_2_MISSIONS } from '../core/missions/stage2Missions';

export const MainMenu = () => {
  const { setCurrentMission } = useMissionStore();
  const { setCurrentScreen } = useAppStore();

  const ALL_MISSIONS = [...STAGE_1_MISSIONS, ...STAGE_2_MISSIONS];

  const handleStartMission = (missionId: string) => {
    const mission = ALL_MISSIONS.find(m => m && m.id === missionId);
    if (mission) {
      // –û—á–∏—â–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–æ–±–æ—Ç–∞
      useGameStore.getState().setProgram([]);
      useGameStore.getState().setRobotState({
        position: [mission.startPosition.x, mission.startPosition.y],
        direction: mission.startPosition.direction,
        energy: 100,
        inventory: [],
      });
      
      setCurrentMission(mission);
      setCurrentScreen('mission');
    }
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º–∏—Å—Å–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
  if (!ALL_MISSIONS || ALL_MISSIONS.length === 0) {
    return (
      <div className="min-h-screen bg-deep-blue text-white flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-3xl mb-4">‚ö†Ô∏è –ó–∞–≥—Ä—É–∑–∫–∞ –º–∏—Å—Å–∏–π...</h1>
          <p>–ú–∏—Å—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
        </div>
      </div>
    );
  }

  const handleBackToMenu = () => {
    setCurrentScreen('mainMenu');
  };

  return (
    <div className="h-screen bg-deep-blue text-white overflow-y-auto">
      <div className="p-8">
      {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
      <div className="mb-6">
        <button
          onClick={handleBackToMenu}
          className="px-6 py-3 bg-gray-600 text-white rounded-lg hover:bg-gray-500 transition-colors"
        >
          ‚Üê –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        </button>
      </div>

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center mb-12">
        <h1 className="text-5xl font-heading font-bold mb-4 text-bright-cyan">
          –í—ã–±–æ—Ä –º–∏—Å—Å–∏–∏
        </h1>
        <p className="text-xl text-gray-300">–í—ã–±–µ—Ä–∏—Ç–µ –º–∏—Å—Å–∏—é –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è</p>
      </div>

      {/* –ö–∞—Ä—Ç–∞ –º–∏—Å—Å–∏–π */}
      <div className="max-w-4xl mx-auto space-y-12">
        {/* –≠—Ç–∞–ø 1 */}
        <div>
          <h2 className="text-3xl font-heading mb-6">–≠—Ç–∞–ø 1: –û—Å–Ω–æ–≤—ã –¥–≤–∏–∂–µ–Ω–∏—è</h2>
          
          <div className="space-y-4">
            {STAGE_1_MISSIONS.map((mission) => {
              if (!mission || !mission.id) {
                return null;
              }

              return (
                <div
                  key={mission.id}
                  onClick={() => handleStartMission(mission.id)}
                  className="p-6 rounded-lg border-2 border-bright-cyan bg-dark-purple/50 hover:bg-bright-cyan/10 transition-all cursor-pointer"
                >
                  <div className="flex items-center justify-between">
                    <div className="flex-1">
                      <div className="flex items-center gap-4">
                        <span className="text-2xl font-bold text-bright-orange">
                          {mission.stage}.{mission.order}
                        </span>
                        <h3 className="text-xl font-heading">{mission.title}</h3>
                      </div>
                      <p className="text-gray-300 mt-2 text-sm line-clamp-2">{mission.description}</p>
                      <div className="flex items-center gap-4 mt-3 text-sm text-gray-400">
                        <span>‚è±Ô∏è ~{mission.estimatedTime} –º–∏–Ω</span>
                        <span>üéØ {mission.difficulty}</span>
                      </div>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        </div>

        {/* –≠—Ç–∞–ø 2 */}
        <div>
          <h2 className="text-3xl font-heading mb-6 flex items-center gap-3">
            <span>–≠—Ç–∞–ø 2: –¶–∏–∫–ª—ã –∏ —É—Å–ª–æ–≤–∏—è</span>
            <span className="text-sm bg-warning-yellow/20 text-warning-yellow px-3 py-1 rounded">–ù–û–í–û–ï!</span>
          </h2>
          
          <div className="space-y-4">
            {STAGE_2_MISSIONS.map((mission) => {
              if (!mission || !mission.id) {
                return null;
              }

              return (
                <div
                  key={mission.id}
                  onClick={() => handleStartMission(mission.id)}
                  className="p-6 rounded-lg border-2 border-warning-yellow bg-dark-purple/50 hover:bg-warning-yellow/10 transition-all cursor-pointer"
                >
                  <div className="flex items-center justify-between">
                    <div className="flex-1">
                      <div className="flex items-center gap-4">
                        <span className="text-2xl font-bold text-warning-yellow">
                          {mission.stage}.{mission.order}
                        </span>
                        <h3 className="text-xl font-heading">{mission.title}</h3>
                      </div>
                      <p className="text-gray-300 mt-2 text-sm line-clamp-2">{mission.description}</p>
                      <div className="flex items-center gap-4 mt-3 text-sm text-gray-400">
                        <span>‚è±Ô∏è ~{mission.estimatedTime} –º–∏–Ω</span>
                        <span>üéØ {mission.difficulty}</span>
                      </div>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      </div>
      </div>
    </div>
  );
};
