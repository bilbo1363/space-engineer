import { useState } from 'react';
import { useAppStore } from '../../store/useAppStore';
import { StoryMoment } from '../../types/game';

// –°—é–∂–µ—Ç–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –∏–≥—Ä—ã
const STORY_MOMENTS: Record<string, StoryMoment> = {
  intro: {
    id: 'intro',
    title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –±–æ—Ä—Ç',
    character: 'aria',
    content: `–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å –Ω–∞ –±–æ—Ä—Ç—É –∫–æ—Å–º–∏—á–µ—Å–∫–æ–π —Å—Ç–∞–Ω—Ü–∏–∏ "–ü–∏–æ–Ω–µ—Ä"!

–Ø - ARIA, –≤–∞—à –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä. –†–∞–¥–∞ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É!

–í—ã –±—ã–ª–∏ –≤—ã–±—Ä–∞–Ω—ã –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö –∏–Ω–∂–µ–Ω–µ—Ä–æ–≤. –í–∞—à–∞ –∑–∞–¥–∞—á–∞ - –Ω–∞—É—á–∏—Ç—å—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å —Ä–æ–±–æ—Ç–æ–≤ –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –¥–∞–ª—ë–∫–∏—Ö –ø–ª–∞–Ω–µ—Ç.

–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ?`,
    choices: [
      { text: '–î–∞, —è –≥–æ—Ç–æ–≤!', nextMoment: 'training_start' },
      { text: '–†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ', nextMoment: 'about_program' },
    ],
  },

  about_program: {
    id: 'about_program',
    title: '–û –ø—Ä–æ–≥—Ä–∞–º–º–µ',
    character: 'aria',
    content: `–ü—Ä–æ–≥—Ä–∞–º–º–∞ "–ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –ò–Ω–∂–µ–Ω–µ—Ä" - —ç—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –∫–æ–º–∞–Ω–¥—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–µ–π –∫–æ—Å–º–æ—Å–∞.

–í—ã –±—É–¥–µ—Ç–µ:
‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å —Ä–æ–±–æ—Ç–æ–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á
‚Ä¢ –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø–ª–∞–Ω–µ—Ç—ã –∏ —Å–æ–±–∏—Ä–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã
‚Ä¢ –†–µ—à–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏
‚Ä¢ –û—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏

–ö–∞–∂–¥–∞—è –º–∏—Å—Å–∏—è –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç –Ω–∞—Å –∫ –≤–µ–ª–∏–∫–æ–π —Ü–µ–ª–∏ - –∫–æ–ª–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö –º–∏—Ä–æ–≤!

–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?`,
    choices: [
      { text: '–î–∞, –Ω–∞—á–Ω—ë–º!', nextMoment: 'training_start' },
    ],
  },

  training_start: {
    id: 'training_start',
    title: '–ù–∞—á–∞–ª–æ –æ–±—É—á–µ–Ω–∏—è',
    character: 'aria',
    content: `–û—Ç–ª–∏—á–Ω–æ! –ù–∞—á–Ω—ë–º —Å –æ—Å–Ω–æ–≤.

–ü–µ—Ä–µ–¥ –≤–∞–º–∏ - —Ä–æ–±–æ—Ç –º–æ–¥–µ–ª–∏ "–ü–∏–æ–Ω–µ—Ä". –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–π, –Ω–æ –Ω–∞–¥—ë–∂–Ω—ã–π —Ä–æ–±–æ—Ç –¥–ª—è –±–∞–∑–æ–≤—ã—Ö –∑–∞–¥–∞—á.

–í–∞—à–∞ –ø–µ—Ä–≤–∞—è –º–∏—Å—Å–∏—è –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ–π - –Ω–∞—É—á–∏—Ç—å —Ä–æ–±–æ—Ç–∞ –¥–≤–∏–≥–∞—Ç—å—Å—è –ø–æ –ø—Ä—è–º–æ–π –ª–∏–Ω–∏–∏. –≠—Ç–æ –æ—Å–Ω–æ–≤–∞ –≤—Å–µ—Ö –±—É–¥—É—â–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º.

–Ø –±—É–¥—É —Ä—è–¥–æ–º –∏ –ø–æ–º–æ–≥—É, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏. –ù–µ –±–æ–π—Ç–µ—Å—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å!

–£–¥–∞—á–∏, –ò–Ω–∂–µ–Ω–µ—Ä!`,
    nextMoment: 'mission',
    unlocksMission: 'mission_1_1',
  },

  mission: {
    id: 'mission',
    title: '–ü–µ—Ä–µ—Ö–æ–¥ –∫ –º–∏—Å—Å–∏–∏',
    character: 'aria',
    content: '–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –º–∏—Å—Å–∏–∏...',
    nextMoment: 'missionSelect',
  },
};

export const StoryScreen = () => {
  const { currentStoryMoment, setCurrentStoryMoment, addCompletedStoryMoment, setCurrentScreen } = useAppStore();
  const [currentMoment, setCurrentMoment] = useState<StoryMoment>(
    STORY_MOMENTS[currentStoryMoment || 'intro']
  );
  const [isTyping, setIsTyping] = useState(true);

  // –°–∏–º—É–ª—è—Ü–∏—è –ø–µ—á–∞—Ç–∏ —Ç–µ–∫—Å—Ç–∞
  useState(() => {
    const timer = setTimeout(() => {
      setIsTyping(false);
    }, 1000);
    return () => clearTimeout(timer);
  });

  const handleChoice = (nextMomentId: string) => {
    addCompletedStoryMoment(currentMoment.id);

    if (nextMomentId === 'missionSelect') {
      setCurrentScreen('missionSelect');
      return;
    }

    const nextMoment = STORY_MOMENTS[nextMomentId];
    if (nextMoment) {
      setCurrentMoment(nextMoment);
      setCurrentStoryMoment(nextMomentId);
      setIsTyping(true);
      setTimeout(() => setIsTyping(false), 1000);
    }
  };

  const handleContinue = () => {
    if (currentMoment.nextMoment) {
      handleChoice(currentMoment.nextMoment);
    }
  };

  const handleSkip = () => {
    addCompletedStoryMoment(currentMoment.id);
    setCurrentScreen('missionSelect');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-deep-blue via-dark-purple to-black text-white flex items-center justify-center p-8">
      <div className="max-w-4xl w-full">
        {/* –ü–µ—Ä—Å–æ–Ω–∞–∂ */}
        <div className="text-center mb-8">
          <div className="text-9xl mb-4 animate-pulse">
            {currentMoment.character === 'aria' ? 'ü§ñ' : 'üë®‚ÄçüöÄ'}
          </div>
          <h2 className="text-3xl font-heading text-bright-cyan">
            {currentMoment.character === 'aria' ? 'ARIA' : '–í—ã'}
          </h2>
        </div>

        {/* –î–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ */}
        <div className="p-8 bg-deep-blue/80 rounded-lg border-2 border-bright-cyan/50 backdrop-blur-sm">
          <h1 className="text-2xl font-heading mb-6 text-bright-orange">
            {currentMoment.title}
          </h1>
          
          <div className="text-lg leading-relaxed whitespace-pre-line mb-8">
            {isTyping ? (
              <span className="animate-pulse">{currentMoment.content.substring(0, 50)}...</span>
            ) : (
              currentMoment.content
            )}
          </div>

          {/* –í—ã–±–æ—Ä—ã –∏–ª–∏ –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è */}
          {!isTyping && (
            <div className="space-y-3">
              {currentMoment.choices ? (
                currentMoment.choices.map((choice, index) => (
                  <button
                    key={index}
                    onClick={() => handleChoice(choice.nextMoment)}
                    className="w-full p-4 bg-bright-cyan/20 border-2 border-bright-cyan/50 rounded-lg hover:bg-bright-cyan/30 hover:border-bright-cyan transition-all text-left"
                  >
                    ‚Üí {choice.text}
                  </button>
                ))
              ) : (
                <button
                  onClick={handleContinue}
                  className="w-full p-4 bg-gradient-to-r from-bright-cyan to-bright-orange text-deep-blue font-bold rounded-lg hover:scale-105 transition-transform"
                >
                  –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚Üí
                </button>
              )}
            </div>
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞ */}
        <div className="text-center mt-6">
          <button
            onClick={handleSkip}
            className="text-gray-400 hover:text-white transition-colors text-sm"
          >
            –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å—é–∂–µ—Ç ‚Üí
          </button>
        </div>
      </div>
    </div>
  );
};
