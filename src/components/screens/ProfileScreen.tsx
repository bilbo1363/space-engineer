import { useState } from 'react';
import { useAppStore } from '../../store/useAppStore';
import { PlayerProfile } from '../../types/game';

export const ProfileScreen = () => {
  const { currentProfile, setCurrentProfile, setCurrentScreen } = useAppStore();
  const [name, setName] = useState(currentProfile?.name || '');
  const [selectedAvatar, setSelectedAvatar] = useState(currentProfile?.avatar || 'ü§ñ');

  const avatars = ['ü§ñ', 'üë®‚ÄçüöÄ', 'üë©‚ÄçüöÄ', 'üßë‚Äçüî¨', 'üë®‚Äçüíª', 'üë©‚Äçüíª', 'ü¶æ', 'üõ∏'];

  const handleSave = () => {
    if (!name.trim()) {
      alert('–í–≤–µ–¥–∏—Ç–µ –∏–º—è!');
      return;
    }

    if (currentProfile) {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å
      setCurrentProfile({
        ...currentProfile,
        name: name.trim(),
        avatar: selectedAvatar,
      });
    } else {
      // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
      const newProfile: PlayerProfile = {
        id: `player_${Date.now()}`,
        name: name.trim(),
        avatar: selectedAvatar,
        level: 1,
        experience: 0,
        credits: 0,
        completedMissions: [],
        unlockedRobots: ['pioneer'],
        createdAt: new Date(),
        lastPlayed: new Date(),
      };
      setCurrentProfile(newProfile);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—é–∂–µ—Ç–Ω–æ–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
      setCurrentScreen('story');
      return;
    }

    setCurrentScreen('mainMenu');
  };

  const handleBack = () => {
    setCurrentScreen('mainMenu');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-deep-blue via-dark-purple to-black text-white p-8">
      <div className="max-w-2xl mx-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-12">
          <h1 className="text-5xl font-heading font-bold mb-4 text-bright-cyan">
            {currentProfile ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å' : '–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å'}
          </h1>
          <p className="text-gray-400">
            {currentProfile 
              ? '–ò–∑–º–µ–Ω–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∫–æ—Å–º–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω–∂–µ–Ω–µ—Ä–∞'
              : '–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –∫–æ—Å–º–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω–∂–µ–Ω–µ—Ä–∞'
            }
          </p>
        </div>

        {/* –§–æ—Ä–º–∞ */}
        <div className="space-y-8">
          {/* –ê–≤–∞—Ç–∞—Ä */}
          <div className="p-6 bg-deep-blue/50 rounded-lg border border-bright-cyan/30">
            <label className="block text-lg font-bold mb-4 text-bright-cyan">
              –í—ã–±–µ—Ä–∏—Ç–µ –∞–≤–∞—Ç–∞—Ä
            </label>
            <div className="grid grid-cols-4 gap-4">
              {avatars.map((avatar) => (
                <button
                  key={avatar}
                  onClick={() => setSelectedAvatar(avatar)}
                  className={`
                    p-6 text-6xl rounded-lg border-2 transition-all hover:scale-110
                    ${selectedAvatar === avatar
                      ? 'border-bright-cyan bg-bright-cyan/20 scale-110'
                      : 'border-bright-cyan/30 bg-deep-blue/30 hover:border-bright-cyan/60'
                    }
                  `}
                >
                  {avatar}
                </button>
              ))}
            </div>
          </div>

          {/* –ò–º—è */}
          <div className="p-6 bg-deep-blue/50 rounded-lg border border-bright-cyan/30">
            <label className="block text-lg font-bold mb-4 text-bright-cyan">
              –í–∞—à–µ –∏–º—è
            </label>
            <input
              type="text"
              value={name}
              onChange={(e) => setName(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è..."
              maxLength={20}
              className="w-full px-4 py-3 bg-deep-blue border-2 border-bright-cyan/50 rounded text-white text-xl focus:outline-none focus:border-bright-cyan"
            />
            <div className="mt-2 text-sm text-gray-400">
              {name.length}/20 —Å–∏–º–≤–æ–ª–æ–≤
            </div>
          </div>

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è) */}
          {currentProfile && (
            <div className="p-6 bg-deep-blue/50 rounded-lg border border-warning-yellow/30">
              <h3 className="text-lg font-bold mb-4 text-warning-yellow">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
              <div className="grid grid-cols-2 gap-4">
                <div className="p-4 bg-deep-blue/50 rounded">
                  <div className="text-3xl mb-2">‚≠ê</div>
                  <div className="text-2xl font-bold">{currentProfile.level}</div>
                  <div className="text-sm text-gray-400">–£—Ä–æ–≤–µ–Ω—å</div>
                </div>
                <div className="p-4 bg-deep-blue/50 rounded">
                  <div className="text-3xl mb-2">üíé</div>
                  <div className="text-2xl font-bold">{currentProfile.experience}</div>
                  <div className="text-sm text-gray-400">–û–ø—ã—Ç</div>
                </div>
                <div className="p-4 bg-deep-blue/50 rounded">
                  <div className="text-3xl mb-2">üéØ</div>
                  <div className="text-2xl font-bold">{currentProfile.completedMissions.length}</div>
                  <div className="text-sm text-gray-400">–ú–∏—Å—Å–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ</div>
                </div>
                <div className="p-4 bg-deep-blue/50 rounded">
                  <div className="text-3xl mb-2">üí∞</div>
                  <div className="text-2xl font-bold">{currentProfile.credits}</div>
                  <div className="text-sm text-gray-400">–ö—Ä–µ–¥–∏—Ç–æ–≤</div>
                </div>
              </div>
            </div>
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div className="flex gap-4 mt-12">
          <button
            onClick={handleBack}
            className="flex-1 px-6 py-4 bg-gray-600 text-white rounded-lg hover:bg-gray-500 transition-colors"
          >
            ‚Üê –ù–∞–∑–∞–¥
          </button>
          <button
            onClick={handleSave}
            disabled={!name.trim()}
            className="flex-1 px-6 py-4 bg-gradient-to-r from-bright-cyan to-bright-orange text-deep-blue font-bold rounded-lg hover:scale-105 transition-transform disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100"
          >
            {currentProfile ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å' : '–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å'} ‚Üí
          </button>
        </div>
      </div>
    </div>
  );
};
